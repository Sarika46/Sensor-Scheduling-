#!/usr/bin/env python
# coding: utf-8
​
# In[1]:
​
​
import pandas as pd   # importing pandas library
from datetime import datetime # importing date and time library
from datetime import timedelta # importing time delta library
n = int(input("enter the number of sensors: ")) # take input from user
m = int(input("enter the number of rooms: "))  # take input from user
list = []                                      # create an empty list
interval = timedelta(minutes=0.5)            #TIME INTERVAL
d = datetime.strptime("9:00","%H:%M")        # display time string
H=(d.strftime("%I:%M:%S"))                   # convert to 12 hour format
print(H)
finaltime=datetime.strptime("17:00","%H:%M")#FINAL TIME
T=(finaltime.strftime("%I:%M:%S:%p"))
J=[]
a=0
lst=[]
light=(15,20,30)
pd.set_option('display.max_rows', None)  # no limit on no. of rows in data frame
pd.set_option('display.max_columns', None)# no limit on no. of columns in data frame5
if(m<=4*n):                               #condition for 1 to 4 map
    
    while(d<finaltime-interval):        # to define time upto which schedule will be generated
        
    
        d=d+interval
    
        f=(d.strftime("%I:%M:%S:%p"))
    
        J.append(f)
    A=pd.DataFrame(J)
    for i in range(n):
    
        list.append(4)
​
    L = 0
    L = sum(list)
​
    while(L>m):
    
        for element in range(len(list)):
    
    
            if(L>m):
        
        
                list[element] =list[element]-1
            
                L = sum(list)
            
​
    
​
    f=pd.DataFrame(list)
    f
    print(list)  
​
    for i in range(len(list)):
            lst.append([])
   
            for j in range(list[i]): 
           
                lst[i].append("room"+str(a+1)) 
                a=a+1
  
    y= []
    d = 0
    b =0
​
    for T in range(len(lst)):
    
    
        y.append([])
    
    
    
        while(b<len(J)):
        
        
            for i in range(len(lst[T])):
            
            
    
    
                if(list[T]==2):
            
        
        
                    R=light[2]
                elif(list[T]==3):
        
                    R=light[1]
                elif(list[T]==4):
        
                    R=(light[0])
                elif(list[T]==1):
                    R=(light[0])
            
                while(d <R):
                
                
                
                
                    d = d+1
                    y[T].append(lst[T][i])
                d = 0
            b = b+1
        b=0
​
​
​
    H=pd.DataFrame(y)                                  # create data frame from list
    fiv=H.transpose()                                  # take transpose of dataframe
    pd.DataFrame(fiv)
    zero=pd.DataFrame(J)
    py=pd.concat([zero,fiv],axis = 1, join ="inner")   # join the two data frames  
    pd.DataFrame(py)
    F=[]
    for U in range(len(lst)+1):
        if(U==0):
        
            F.append("TIME")
        if(U>0):
        
            F.append("SENSOR"+str(U))
​
​
​
    py.columns =F
​
    
    print(py)
else:
    print("not feasible by one to four map")
​
​
# In[ ]:
​
​
​
​
